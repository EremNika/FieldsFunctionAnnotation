<Application x:Class="FieldsFunctionAnnotation.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:FieldsFunctionAnnotation"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <SolidColorBrush x:Key="YellowBrush" Color="Yellow"/>
            <SolidColorBrush x:Key="RedBrush" Color="Red"/>
            <SolidColorBrush x:Key="GreenBrush" Color="GreenYellow"/>
            <ControlTemplate x:Key="DefaultTemplateOfButton" TargetType="{x:Type ButtonBase}">
                <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                BorderBrush="{TemplateBinding Border.BorderBrush}"
                Background="{TemplateBinding Panel.Background}"
                Name="border"
                SnapsToDevicePixels="True">
                    <ContentPresenter RecognizesAccessKey="True"
                                Content="{TemplateBinding ContentControl.Content}"
                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                Name="contentPresenter"
                                Margin="{TemplateBinding Control.Padding}"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                Focusable="False" />
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="Button.IsDefaulted" Value="True">
                        <Setter Property="Panel.Background" TargetName="border" Value="Black"/>

                        <Setter Property="Border.BorderBrush" TargetName="border" Value="{StaticResource GreenBrush}"/>
                    </Trigger>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                        <Setter Property="Panel.Background" TargetName="border" Value="{StaticResource RedBrush}"/>

                        <Setter Property="Border.BorderBrush" TargetName="border" Value="{StaticResource GreenBrush}"/>
                    </Trigger>
                    <Trigger Property="ButtonBase.IsPressed" Value="True">
                        <Setter Property="Panel.Background" TargetName="border" Value="{StaticResource RedBrush}"/>

                        <Setter Property="Border.BorderBrush" TargetName="border" Value="{StaticResource GreenBrush}"/>
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                        <Setter Property="Panel.Background" TargetName="border" Value="{StaticResource RedBrush}"/>

                        <Setter Property="Border.BorderBrush" TargetName="border" Value="{StaticResource GreenBrush}"/>

                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled" Value="False">
                        <Setter Property="Panel.Background" TargetName="border" Value="{StaticResource GreenBrush}"/>

                        <Setter Property="Border.BorderBrush" TargetName="border" Value="{StaticResource GreenBrush}"/>
                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Aqua"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="ToggleButtonBase"  TargetType="{x:Type ToggleButton}">
                <Setter Property="Background" Value="Black"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="Width" Value="20"/>
                <Setter Property="Template" Value="{StaticResource DefaultTemplateOfButton}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="1"/>
                        <Setter Property="Background" Value="{StaticResource RedBrush}"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Opacity" Value="1"/>
                        <Setter Property="Background" Value="{StaticResource RedBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ButtonBase" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="Black"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="Width" Value="20"/>
                <Setter Property="Template" Value="{StaticResource DefaultTemplateOfButton}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="1"/>
                        <Setter Property="Background" Value="{StaticResource RedBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="Road" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
                <Setter Property="Width" Value="40"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="OpacityMask">
                    <Setter.Value>
                        <ImageBrush ImageSource="/Road.png"/>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="Ball" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ToggleButtonBase}">
                <Setter Property="OpacityMask">
                    <Setter.Value>
                        <ImageBrush ImageSource="/Ball.png" Stretch="Uniform"/>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="Arrow" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ToggleButtonBase}">
                <Setter Property="Width" Value="40"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="OpacityMask">
                    <Setter.Value>
                        <ImageBrush ImageSource="/Arrow.png" Stretch="Uniform"/>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="VerticalRoad" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
                <Setter Property="Width" Value="20"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="OpacityMask">
                    <Setter.Value>
                        <ImageBrush ImageSource="/RoadVertical.png"/>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
